// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dal_core_authority.proto

package dal_core_user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Authorities struct {
	OrgAuthorities       []*OrgAuthority  `protobuf:"bytes,1,rep,name=org_authorities,json=orgAuthorities,proto3" json:"org_authorities,omitempty"`
	UserAuthorities      []*UserAuthority `protobuf:"bytes,2,rep,name=user_authorities,json=userAuthorities,proto3" json:"user_authorities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Authorities) Reset()         { *m = Authorities{} }
func (m *Authorities) String() string { return proto.CompactTextString(m) }
func (*Authorities) ProtoMessage()    {}
func (*Authorities) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5d862c23350f313, []int{0}
}

func (m *Authorities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authorities.Unmarshal(m, b)
}
func (m *Authorities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authorities.Marshal(b, m, deterministic)
}
func (m *Authorities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authorities.Merge(m, src)
}
func (m *Authorities) XXX_Size() int {
	return xxx_messageInfo_Authorities.Size(m)
}
func (m *Authorities) XXX_DiscardUnknown() {
	xxx_messageInfo_Authorities.DiscardUnknown(m)
}

var xxx_messageInfo_Authorities proto.InternalMessageInfo

func (m *Authorities) GetOrgAuthorities() []*OrgAuthority {
	if m != nil {
		return m.OrgAuthorities
	}
	return nil
}

func (m *Authorities) GetUserAuthorities() []*UserAuthority {
	if m != nil {
		return m.UserAuthorities
	}
	return nil
}

type UserAuthority struct {
	IndexKey             string   `protobuf:"bytes,1,opt,name=index_key,json=indexKey,proto3" json:"index_key,omitempty"`
	OrgAuthorityKey      string   `protobuf:"bytes,2,opt,name=org_authority_key,json=orgAuthorityKey,proto3" json:"org_authority_key,omitempty"`
	Value                int64    `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthority) Reset()         { *m = UserAuthority{} }
func (m *UserAuthority) String() string { return proto.CompactTextString(m) }
func (*UserAuthority) ProtoMessage()    {}
func (*UserAuthority) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5d862c23350f313, []int{1}
}

func (m *UserAuthority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthority.Unmarshal(m, b)
}
func (m *UserAuthority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthority.Marshal(b, m, deterministic)
}
func (m *UserAuthority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthority.Merge(m, src)
}
func (m *UserAuthority) XXX_Size() int {
	return xxx_messageInfo_UserAuthority.Size(m)
}
func (m *UserAuthority) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthority.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthority proto.InternalMessageInfo

func (m *UserAuthority) GetIndexKey() string {
	if m != nil {
		return m.IndexKey
	}
	return ""
}

func (m *UserAuthority) GetOrgAuthorityKey() string {
	if m != nil {
		return m.OrgAuthorityKey
	}
	return ""
}

func (m *UserAuthority) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UserAuthority) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OrgAuthority struct {
	IndexKey             string   `protobuf:"bytes,1,opt,name=index_key,json=indexKey,proto3" json:"index_key,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrgAuthority) Reset()         { *m = OrgAuthority{} }
func (m *OrgAuthority) String() string { return proto.CompactTextString(m) }
func (*OrgAuthority) ProtoMessage()    {}
func (*OrgAuthority) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5d862c23350f313, []int{2}
}

func (m *OrgAuthority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgAuthority.Unmarshal(m, b)
}
func (m *OrgAuthority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgAuthority.Marshal(b, m, deterministic)
}
func (m *OrgAuthority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgAuthority.Merge(m, src)
}
func (m *OrgAuthority) XXX_Size() int {
	return xxx_messageInfo_OrgAuthority.Size(m)
}
func (m *OrgAuthority) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgAuthority.DiscardUnknown(m)
}

var xxx_messageInfo_OrgAuthority proto.InternalMessageInfo

func (m *OrgAuthority) GetIndexKey() string {
	if m != nil {
		return m.IndexKey
	}
	return ""
}

func (m *OrgAuthority) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *OrgAuthority) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Authorities)(nil), "dal_core_user.Authorities")
	proto.RegisterType((*UserAuthority)(nil), "dal_core_user.UserAuthority")
	proto.RegisterType((*OrgAuthority)(nil), "dal_core_user.OrgAuthority")
}

func init() { proto.RegisterFile("dal_core_authority.proto", fileDescriptor_b5d862c23350f313) }

var fileDescriptor_b5d862c23350f313 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4e, 0xf2, 0x40,
	0x10, 0x80, 0xff, 0x52, 0x7e, 0x23, 0x83, 0x80, 0x6e, 0x8c, 0x36, 0x85, 0x03, 0xe1, 0x44, 0x3c,
	0x2c, 0x09, 0xde, 0xbc, 0x89, 0xa8, 0x07, 0x0f, 0x1a, 0x0c, 0x67, 0xb2, 0xc0, 0x58, 0x37, 0x16,
	0xa6, 0xd9, 0xb6, 0xc4, 0xbd, 0xfa, 0x1c, 0x3e, 0xac, 0xd9, 0x45, 0xca, 0x42, 0xd4, 0x5b, 0xa7,
	0xf3, 0xcd, 0x37, 0xb3, 0x33, 0x10, 0xcc, 0x45, 0x3c, 0x99, 0x91, 0xc2, 0x89, 0xc8, 0xb3, 0x57,
	0x52, 0x32, 0xd3, 0x3c, 0x51, 0x94, 0x11, 0xab, 0x15, 0x99, 0x3c, 0x45, 0x15, 0x36, 0x23, 0xa2,
	0x28, 0xc6, 0x9e, 0x4d, 0x4e, 0xf3, 0x97, 0x1e, 0x2e, 0x92, 0x0d, 0xdb, 0xf9, 0xf4, 0xa0, 0x7a,
	0xfd, 0x5d, 0x2f, 0x31, 0x65, 0x43, 0x68, 0x90, 0x8a, 0x0a, 0xa5, 0xc4, 0x34, 0xf0, 0xda, 0x7e,
	0xb7, 0xda, 0x6f, 0xf2, 0x1d, 0x2b, 0x7f, 0x54, 0xd1, 0xa6, 0x4e, 0x8f, 0xea, 0xb4, 0x8d, 0x8c,
	0xe5, 0x1e, 0x8e, 0x0d, 0xb4, 0xa3, 0x29, 0x59, 0x4d, 0x6b, 0x4f, 0x33, 0x4e, 0x51, 0x6d, 0x3d,
	0x8d, 0xdc, 0x09, 0x25, 0xa6, 0x9d, 0x0f, 0x0f, 0x6a, 0x3b, 0x08, 0x6b, 0x42, 0x45, 0x2e, 0xe7,
	0xf8, 0x3e, 0x79, 0x43, 0x1d, 0x78, 0x6d, 0xaf, 0x5b, 0x19, 0x1d, 0xda, 0x1f, 0x0f, 0xa8, 0xd9,
	0x05, 0x9c, 0xb8, 0xd3, 0x6b, 0x0b, 0x95, 0x2c, 0xd4, 0x70, 0x46, 0xd4, 0x86, 0x3d, 0x85, 0xff,
	0x2b, 0x11, 0xe7, 0x18, 0xf8, 0x6d, 0xaf, 0xeb, 0x8f, 0xd6, 0x01, 0x63, 0x50, 0x5e, 0x8a, 0x05,
	0x06, 0x65, 0x5b, 0x64, 0xbf, 0x3b, 0x63, 0x38, 0x72, 0x5f, 0xfb, 0xf7, 0x08, 0x85, 0xb6, 0xf4,
	0x93, 0xd6, 0xdf, 0x6a, 0xfb, 0x02, 0xce, 0x87, 0x22, 0xbe, 0x21, 0x85, 0x85, 0xfa, 0x19, 0xd5,
	0x4a, 0xce, 0x90, 0xdd, 0x41, 0x3d, 0xc2, 0xcc, 0xdd, 0xe8, 0x19, 0x5f, 0x5f, 0x91, 0x6f, 0xae,
	0xc8, 0x6f, 0xcd, 0x15, 0xc3, 0x70, 0x6f, 0x9f, 0xee, 0xf2, 0xfe, 0x0d, 0xae, 0x20, 0x9c, 0xd1,
	0x82, 0x4f, 0x89, 0x32, 0x91, 0x24, 0x06, 0xe5, 0x06, 0x5d, 0x4b, 0x06, 0xad, 0x5f, 0xda, 0x3f,
	0xd9, 0x16, 0x07, 0x16, 0xba, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x93, 0x1a, 0x23, 0xf6, 0x68,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DalCoreAuthorityServiceClient is the client API for DalCoreAuthorityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DalCoreAuthorityServiceClient interface {
	//------------------ User
	// check login
	GetAuthorities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Authorities, error)
}

type dalCoreAuthorityServiceClient struct {
	cc *grpc.ClientConn
}

func NewDalCoreAuthorityServiceClient(cc *grpc.ClientConn) DalCoreAuthorityServiceClient {
	return &dalCoreAuthorityServiceClient{cc}
}

func (c *dalCoreAuthorityServiceClient) GetAuthorities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Authorities, error) {
	out := new(Authorities)
	err := c.cc.Invoke(ctx, "/dal_core_user.DalCoreAuthorityService/getAuthorities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DalCoreAuthorityServiceServer is the server API for DalCoreAuthorityService service.
type DalCoreAuthorityServiceServer interface {
	//------------------ User
	// check login
	GetAuthorities(context.Context, *empty.Empty) (*Authorities, error)
}

func RegisterDalCoreAuthorityServiceServer(s *grpc.Server, srv DalCoreAuthorityServiceServer) {
	s.RegisterService(&_DalCoreAuthorityService_serviceDesc, srv)
}

func _DalCoreAuthorityService_GetAuthorities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DalCoreAuthorityServiceServer).GetAuthorities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dal_core_user.DalCoreAuthorityService/GetAuthorities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DalCoreAuthorityServiceServer).GetAuthorities(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DalCoreAuthorityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dal_core_user.DalCoreAuthorityService",
	HandlerType: (*DalCoreAuthorityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getAuthorities",
			Handler:    _DalCoreAuthorityService_GetAuthorities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dal_core_authority.proto",
}
